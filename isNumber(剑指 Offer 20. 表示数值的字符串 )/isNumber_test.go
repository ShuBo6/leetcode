package main

import "regexp"

// 正则一把梭

/*
^: 表示匹配字符串的开头。
\s*: 匹配零个或多个空白字符，包括空格、制表符等。
[+-]?: 匹配可选的正负号，即可以有可选的加号或减号。
(\d*\.\d+)|(\d+\.?\d*): 这部分是匹配数字的小数点部分。它包括两个选择：第一个选择 (\d*\.\d+) 匹配具有小数点的数字，第二个选择 (\d+\.?\d*) 匹配整数或浮点数中没有小数点的数字部分。这两个选择使用竖线 | 分隔，表示二者之一都可以匹配。
([eE][+-]?\d+)?: 这部分匹配科学计数法表示法中的指数部分。它是可选的，表示可以没有指数部分，也可以有。它的模式是 [eE] 表示字母 'e' 或 'E'，后面跟着可选的正负号和一或多个数字。
\s*$: 匹配零个或多个空白字符，然后是字符串的结尾 $。
*/
func isNumber(s string) bool {
	return regexp.MustCompile(`^\s*[+-]?((\d*\.\d+)|(\d+\.?\d*))([eE][+-]?\d+)?\s*$`).MatchString(s)
}

// TODO 状态机
